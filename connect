#!/bin/bash
#
# Connect to remote host with SSH
# Optionally attach to tmux/screen session

this_script_name="$(basename "$0")"

function usage() {
	{
		echo -e "$*"
		echo -e "Connect to remote host, and reconnect on failure"
		echo -e "Optionally attach to tmux/screen session"
		echo -e ""
		echo -e ""
		echo -e ""
		echo -e ""
		echo -e ""
		echo -e "$this_script_name <host> [attach[:<tmux|screen>|:<session name>]] [command]"
		echo -e "\thost\tRemote Host to connect to"
		echo -e "\tattach\tAttempt to attach to session on <host>"
		echo -e "\t\ttmux|screen\tterminal multiplexer session to attach to (tmux is default)"
		echo -e "\t\tsession name\tname of terminal multiplexer session"
		echo -e ""
		echo -e "Examples:"
		echo -e "Connect to most recent tmux session (or create new one) on host"
		echo -e "$this_script_name host attach"
		echo -e "$this_script_name host attach:tmux"
		echo -e ""
		echo -e "Connect to most recent screen session (or create a new one) on host"
		echo -e "$this_script_name host attach:screen"
		echo -e ""
		echo -e "Connect to tmux session named 'server-maintainence' on host"
		echo -e "$this_script_name host attach:server-maintainence"
		echo -e "$this_script_name host attach:tmux:server-maintainence"
		echo -e ""
		echo -e "Connect to screen session named 'server-maintainence' on host"
		echo -e "$this_script_name host attach:screen:server-maintainence"
		echo -e ""
	}
}

# Host is always first argument
arg_host="${1-}"
shift

# Parse remaining arguments
while (( $# )) ; do
	case $1 in
		attach* )
			arg_mode=attach
			if [[ $1 =~ ^attach: ]] ; then
				arg_attach_options="${1#attach:}"
			fi
			shift
			;;
		* )
			arg_command+=" $1"
			shift
			;;
	esac
done

# Assign parameters to defaults or from arguments
host="${arg_host-}"
mode="${arg_mode-}"
command="${arg_command-}"

if [[ $host = "" ]] ; then
	echo "No Host given" >&2
	exit 1
fi

attach_options="${arg_attach_options-}"
if [[ ${attach_args} =~ ^(tmux|screen)(:(.*)|)$ ]] ; then
	attach_program="${BASH_REMATCH[1]}"
	attach_session="${BASH_REMATCH[3]}"
else
	attach_program="tmux"
	attach_session=""
fi

if [[ $mode = attach ]] ; then
	if [[ $attach_program = screen ]] ; then
		attach_existing="screen -r"
		attach_new="screen"
		if [[ $attach_session != "" ]] ; then
			attach_existing+=" $attach_session"
			attach_new+=" -S $attach_session"
		fi
	elif [[ $attach_program = tmux ]] ; then
		attach_existing="tmux attach"
		attach_new="tmux"
		if [[ $attach_session != "" ]] ; then
			attach_existing+=" -t $attach_session"
			attach_new+=" new -s $attach_session"
		fi
	fi
	attach_command="$attach_existing || $attach_new || bash -l"
else
	attach_command=""
fi

echo Connecting to $host ...

while : ; do
	ssh -o ConnectTimeout=3 \
		$host \
		$attach_command \
		$command 2>/dev/null
	ssh_exit_code="$?"
	if [ "$ssh_exit_code" = "0" ] ; then
		# Clean disconnect from $host
		echo Disconnected from $host
		break
	elif [[ $ssh_exit_code = 255 ]] ; then
		echo -n .
		sleep 0.5
	else
		echo -e "\nbooted off with code '$ssh_exit_code'"
		sleep 1
	fi
done
